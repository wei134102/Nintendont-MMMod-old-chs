name: Build Nintendont

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up dependencies
      run: |
        # 创建工具链目录
        mkdir -p $HOME/devkitPro
        
        # 下载并解压特定版本的devkitARM
        wget https://wii.leseratte10.de/devkitPro/devkitARM/r53%20%282019-06%29/devkitARM-r53-1-linux.pkg.tar.xz -O devkitARM.tar.xz
        tar -xJf devkitARM.tar.xz -C $HOME/devkitPro
        
        # 下载并解压特定版本的devkitPPC
        wget https://wii.leseratte10.de/devkitPro/devkitPPC/r35/devkitPPC_r35-linux.tar.xz -O devkitPPC.tar.xz
        tar -xJf devkitPPC.tar.xz -C $HOME/devkitPro
        
        # 下载并解压特定版本的libOGC
        wget https://wii.leseratte10.de/devkitPro/libogc/libogc_1.8.23%20%282019-10-02%29/libogc-1.8.23-1-any.pkg.tar.xz -O libogc.tar.xz
        tar -xJf libogc.tar.xz -C $HOME/devkitPro
        #下载并解压特定版本的WII RULES
        wget https://wii.leseratte10.de/devkitPro/devkitPPC/devkitppc-rules/devkitppc-rules-1.1.1-1-any.pkg.tar.xz -O devkitppc-rules.tar.xz
        tar -xJf devkitppc-rules.tar.xz -C $HOME/devkitPro

        # 设置环境变量
        echo "DEVKITPRO=$HOME/devkitPro" >> $GITHUB_ENV
        echo "DEVKITARM=$HOME/devkitPro/devkitARM" >> $GITHUB_ENV
        echo "DEVKITPPC=$HOME/devkitPro/devkitPPC" >> $GITHUB_ENV
    
    - name: Build Nintendont
      run: |
        make forced
    
    - name: Upload build artifact
      uses: actions/upload-artifact@v4
      with:
        name: loader.dol
        path: loader/loader.dol